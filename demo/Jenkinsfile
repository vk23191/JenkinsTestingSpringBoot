pipeline {
     agent any
environment {
        TOMCAT_URL = 'http://localhost:8080'
        APP_NAME = 'my-webapp'
    }
    tools {
        // Specify the Maven installation
        maven 'Maven'
    }
    stages {
        stage('Checkout') {
            steps {
                // Checkout source code from GitHub repository
                git branch: 'main', credentialsId: 'f5fe8d92-8d03-465f-9d5d-6c052451abde', url: 'https://github.com/vk23191/JenkinsTestingSpringBoot.git'
            }
        }

        stage('Test') {
            steps {
                dir('demo') {
                    // Execute Maven build commands
                    sh 'mvn clean test'
                }
            }
        }
stage('Build') {
            steps {
                dir('demo') {
                    // Execute Maven build commands
                    sh 'mvn clean package'
                }
            }
        }
        stage('Deploy to Tomcat') {
            steps {
                script {
                    def warFiles = findFiles(glob: 'demo/target/*.war')

                    if (warFiles == null || warFiles.length == 0) {
                        error 'No WAR files found to deploy'
                    } else {
                        def warFile = warFiles[0] // Assuming deploying the first WAR file found
                        def deployUrl = "${env.TOMCAT_URL}/manager/text/deploy?path=/${env.APP_NAME}&update=true"

                        sh "curl -v --upload-file ${warFile.path} '${deployUrl}'"
                    }
                }
            }
        }
        
    }

    post {
        success {
            echo 'Pipeline succeeded! This can include additional notifications or steps upon success.'
        }
        failure {
            echo 'Pipeline failed! This can include cleanup or notifications upon failure.'
        }
    }
}
